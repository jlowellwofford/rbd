// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bensallen/rbd/models"
)

// ListMountsRbdReader is a Reader for the ListMountsRbd structure.
type ListMountsRbdReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMountsRbdReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMountsRbdOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListMountsRbdDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListMountsRbdOK creates a ListMountsRbdOK with default headers values
func NewListMountsRbdOK() *ListMountsRbdOK {
	return &ListMountsRbdOK{}
}

/*ListMountsRbdOK handles this case with default header values.

list of rbd mounts
*/
type ListMountsRbdOK struct {
	Payload []*models.MountRbd
}

func (o *ListMountsRbdOK) Error() string {
	return fmt.Sprintf("[GET /mount/rbd][%d] listMountsRbdOK  %+v", 200, o.Payload)
}

func (o *ListMountsRbdOK) GetPayload() []*models.MountRbd {
	return o.Payload
}

func (o *ListMountsRbdOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMountsRbdDefault creates a ListMountsRbdDefault with default headers values
func NewListMountsRbdDefault(code int) *ListMountsRbdDefault {
	return &ListMountsRbdDefault{
		_statusCode: code,
	}
}

/*ListMountsRbdDefault handles this case with default header values.

error
*/
type ListMountsRbdDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list mounts rbd default response
func (o *ListMountsRbdDefault) Code() int {
	return o._statusCode
}

func (o *ListMountsRbdDefault) Error() string {
	return fmt.Sprintf("[GET /mount/rbd][%d] list_mounts_rbd default  %+v", o._statusCode, o.Payload)
}

func (o *ListMountsRbdDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListMountsRbdDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
