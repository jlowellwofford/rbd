// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bensallen/rbd/models"
)

// MountOverlayReader is a Reader for the MountOverlay structure.
type MountOverlayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MountOverlayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewMountOverlayCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewMountOverlayDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMountOverlayCreated creates a MountOverlayCreated with default headers values
func NewMountOverlayCreated() *MountOverlayCreated {
	return &MountOverlayCreated{}
}

/*MountOverlayCreated handles this case with default header values.

Overlay mount succeed
*/
type MountOverlayCreated struct {
	Payload *models.MountOverlay
}

func (o *MountOverlayCreated) Error() string {
	return fmt.Sprintf("[POST /mount/overlay][%d] mountOverlayCreated  %+v", 201, o.Payload)
}

func (o *MountOverlayCreated) GetPayload() *models.MountOverlay {
	return o.Payload
}

func (o *MountOverlayCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MountOverlay)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMountOverlayDefault creates a MountOverlayDefault with default headers values
func NewMountOverlayDefault(code int) *MountOverlayDefault {
	return &MountOverlayDefault{
		_statusCode: code,
	}
}

/*MountOverlayDefault handles this case with default header values.

error
*/
type MountOverlayDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the mount overlay default response
func (o *MountOverlayDefault) Code() int {
	return o._statusCode
}

func (o *MountOverlayDefault) Error() string {
	return fmt.Sprintf("[POST /mount/overlay][%d] mount_overlay default  %+v", o._statusCode, o.Payload)
}

func (o *MountOverlayDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *MountOverlayDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
