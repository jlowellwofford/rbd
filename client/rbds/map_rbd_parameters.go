// Code generated by go-swagger; DO NOT EDIT.

package rbds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/bensallen/rbd/models"
)

// NewMapRbdParams creates a new MapRbdParams object
// with the default values initialized.
func NewMapRbdParams() *MapRbdParams {
	var ()
	return &MapRbdParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewMapRbdParamsWithTimeout creates a new MapRbdParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMapRbdParamsWithTimeout(timeout time.Duration) *MapRbdParams {
	var ()
	return &MapRbdParams{

		timeout: timeout,
	}
}

// NewMapRbdParamsWithContext creates a new MapRbdParams object
// with the default values initialized, and the ability to set a context for a request
func NewMapRbdParamsWithContext(ctx context.Context) *MapRbdParams {
	var ()
	return &MapRbdParams{

		Context: ctx,
	}
}

// NewMapRbdParamsWithHTTPClient creates a new MapRbdParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMapRbdParamsWithHTTPClient(client *http.Client) *MapRbdParams {
	var ()
	return &MapRbdParams{
		HTTPClient: client,
	}
}

/*MapRbdParams contains all the parameters to send to the API endpoint
for the map rbd operation typically these are written to a http.Request
*/
type MapRbdParams struct {

	/*Rbd*/
	Rbd *models.Rbd

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the map rbd params
func (o *MapRbdParams) WithTimeout(timeout time.Duration) *MapRbdParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the map rbd params
func (o *MapRbdParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the map rbd params
func (o *MapRbdParams) WithContext(ctx context.Context) *MapRbdParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the map rbd params
func (o *MapRbdParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the map rbd params
func (o *MapRbdParams) WithHTTPClient(client *http.Client) *MapRbdParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the map rbd params
func (o *MapRbdParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRbd adds the rbd to the map rbd params
func (o *MapRbdParams) WithRbd(rbd *models.Rbd) *MapRbdParams {
	o.SetRbd(rbd)
	return o
}

// SetRbd adds the rbd to the map rbd params
func (o *MapRbdParams) SetRbd(rbd *models.Rbd) {
	o.Rbd = rbd
}

// WriteToRequest writes these params to a swagger request
func (o *MapRbdParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Rbd != nil {
		if err := r.SetBodyParam(o.Rbd); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
