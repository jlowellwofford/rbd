// Code generated by go-swagger; DO NOT EDIT.

package rbds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bensallen/rbd/models"
)

// ListRbdsReader is a Reader for the ListRbds structure.
type ListRbdsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRbdsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRbdsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListRbdsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRbdsOK creates a ListRbdsOK with default headers values
func NewListRbdsOK() *ListRbdsOK {
	return &ListRbdsOK{}
}

/*ListRbdsOK handles this case with default header values.

list of rbd maps
*/
type ListRbdsOK struct {
	Payload []*models.Rbd
}

func (o *ListRbdsOK) Error() string {
	return fmt.Sprintf("[GET /rbd][%d] listRbdsOK  %+v", 200, o.Payload)
}

func (o *ListRbdsOK) GetPayload() []*models.Rbd {
	return o.Payload
}

func (o *ListRbdsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRbdsDefault creates a ListRbdsDefault with default headers values
func NewListRbdsDefault(code int) *ListRbdsDefault {
	return &ListRbdsDefault{
		_statusCode: code,
	}
}

/*ListRbdsDefault handles this case with default header values.

generic error response
*/
type ListRbdsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list rbds default response
func (o *ListRbdsDefault) Code() int {
	return o._statusCode
}

func (o *ListRbdsDefault) Error() string {
	return fmt.Sprintf("[GET /rbd][%d] list_rbds default  %+v", o._statusCode, o.Payload)
}

func (o *ListRbdsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListRbdsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
