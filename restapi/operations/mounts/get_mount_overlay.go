// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMountOverlayHandlerFunc turns a function with the right signature into a get mount overlay handler
type GetMountOverlayHandlerFunc func(GetMountOverlayParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMountOverlayHandlerFunc) Handle(params GetMountOverlayParams) middleware.Responder {
	return fn(params)
}

// GetMountOverlayHandler interface for that can handle valid get mount overlay params
type GetMountOverlayHandler interface {
	Handle(GetMountOverlayParams) middleware.Responder
}

// NewGetMountOverlay creates a new http.Handler for the get mount overlay operation
func NewGetMountOverlay(ctx *middleware.Context, handler GetMountOverlayHandler) *GetMountOverlay {
	return &GetMountOverlay{Context: ctx, Handler: handler}
}

/*GetMountOverlay swagger:route GET /mount/overlay/{id} mounts getMountOverlay

GetMountOverlay get mount overlay API

*/
type GetMountOverlay struct {
	Context *middleware.Context
	Handler GetMountOverlayHandler
}

func (o *GetMountOverlay) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMountOverlayParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
