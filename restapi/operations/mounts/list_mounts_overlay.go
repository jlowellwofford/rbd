// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListMountsOverlayHandlerFunc turns a function with the right signature into a list mounts overlay handler
type ListMountsOverlayHandlerFunc func(ListMountsOverlayParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListMountsOverlayHandlerFunc) Handle(params ListMountsOverlayParams) middleware.Responder {
	return fn(params)
}

// ListMountsOverlayHandler interface for that can handle valid list mounts overlay params
type ListMountsOverlayHandler interface {
	Handle(ListMountsOverlayParams) middleware.Responder
}

// NewListMountsOverlay creates a new http.Handler for the list mounts overlay operation
func NewListMountsOverlay(ctx *middleware.Context, handler ListMountsOverlayHandler) *ListMountsOverlay {
	return &ListMountsOverlay{Context: ctx, Handler: handler}
}

/*ListMountsOverlay swagger:route GET /mount/overlay mounts listMountsOverlay

ListMountsOverlay list mounts overlay API

*/
type ListMountsOverlay struct {
	Context *middleware.Context
	Handler ListMountsOverlayHandler
}

func (o *ListMountsOverlay) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListMountsOverlayParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
