// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bensallen/rbd/models"
)

// MountRbdCreatedCode is the HTTP code returned for type MountRbdCreated
const MountRbdCreatedCode int = 201

/*MountRbdCreated RBD mount succeed

swagger:response mountRbdCreated
*/
type MountRbdCreated struct {

	/*
	  In: Body
	*/
	Payload *models.MountRbd `json:"body,omitempty"`
}

// NewMountRbdCreated creates MountRbdCreated with default headers values
func NewMountRbdCreated() *MountRbdCreated {

	return &MountRbdCreated{}
}

// WithPayload adds the payload to the mount rbd created response
func (o *MountRbdCreated) WithPayload(payload *models.MountRbd) *MountRbdCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mount rbd created response
func (o *MountRbdCreated) SetPayload(payload *models.MountRbd) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MountRbdCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*MountRbdDefault error

swagger:response mountRbdDefault
*/
type MountRbdDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMountRbdDefault creates MountRbdDefault with default headers values
func NewMountRbdDefault(code int) *MountRbdDefault {
	if code <= 0 {
		code = 500
	}

	return &MountRbdDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the mount rbd default response
func (o *MountRbdDefault) WithStatusCode(code int) *MountRbdDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the mount rbd default response
func (o *MountRbdDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the mount rbd default response
func (o *MountRbdDefault) WithPayload(payload *models.Error) *MountRbdDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mount rbd default response
func (o *MountRbdDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MountRbdDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
