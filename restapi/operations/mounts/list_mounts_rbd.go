// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListMountsRbdHandlerFunc turns a function with the right signature into a list mounts rbd handler
type ListMountsRbdHandlerFunc func(ListMountsRbdParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListMountsRbdHandlerFunc) Handle(params ListMountsRbdParams) middleware.Responder {
	return fn(params)
}

// ListMountsRbdHandler interface for that can handle valid list mounts rbd params
type ListMountsRbdHandler interface {
	Handle(ListMountsRbdParams) middleware.Responder
}

// NewListMountsRbd creates a new http.Handler for the list mounts rbd operation
func NewListMountsRbd(ctx *middleware.Context, handler ListMountsRbdHandler) *ListMountsRbd {
	return &ListMountsRbd{Context: ctx, Handler: handler}
}

/*ListMountsRbd swagger:route GET /mount/rbd mounts listMountsRbd

ListMountsRbd list mounts rbd API

*/
type ListMountsRbd struct {
	Context *middleware.Context
	Handler ListMountsRbdHandler
}

func (o *ListMountsRbd) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListMountsRbdParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
