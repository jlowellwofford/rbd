// Code generated by go-swagger; DO NOT EDIT.

package mounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// MountRbdHandlerFunc turns a function with the right signature into a mount rbd handler
type MountRbdHandlerFunc func(MountRbdParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MountRbdHandlerFunc) Handle(params MountRbdParams) middleware.Responder {
	return fn(params)
}

// MountRbdHandler interface for that can handle valid mount rbd params
type MountRbdHandler interface {
	Handle(MountRbdParams) middleware.Responder
}

// NewMountRbd creates a new http.Handler for the mount rbd operation
func NewMountRbd(ctx *middleware.Context, handler MountRbdHandler) *MountRbd {
	return &MountRbd{Context: ctx, Handler: handler}
}

/*MountRbd swagger:route POST /mount/rbd mounts mountRbd

MountRbd mount rbd API

*/
type MountRbd struct {
	Context *middleware.Context
	Handler MountRbdHandler
}

func (o *MountRbd) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMountRbdParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
