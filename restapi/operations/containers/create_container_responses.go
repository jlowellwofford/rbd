// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bensallen/rbd/models"
)

// CreateContainerCreatedCode is the HTTP code returned for type CreateContainerCreated
const CreateContainerCreatedCode int = 201

/*CreateContainerCreated Container creation succeed

swagger:response createContainerCreated
*/
type CreateContainerCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Container `json:"body,omitempty"`
}

// NewCreateContainerCreated creates CreateContainerCreated with default headers values
func NewCreateContainerCreated() *CreateContainerCreated {

	return &CreateContainerCreated{}
}

// WithPayload adds the payload to the create container created response
func (o *CreateContainerCreated) WithPayload(payload *models.Container) *CreateContainerCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create container created response
func (o *CreateContainerCreated) SetPayload(payload *models.Container) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateContainerCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateContainerDefault error

swagger:response createContainerDefault
*/
type CreateContainerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateContainerDefault creates CreateContainerDefault with default headers values
func NewCreateContainerDefault(code int) *CreateContainerDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateContainerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create container default response
func (o *CreateContainerDefault) WithStatusCode(code int) *CreateContainerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create container default response
func (o *CreateContainerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create container default response
func (o *CreateContainerDefault) WithPayload(payload *models.Error) *CreateContainerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create container default response
func (o *CreateContainerDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateContainerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
