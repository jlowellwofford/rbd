// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MountOverlay `mount_overlay` describes an Overlayfs mount.  All mount points must be RBD ID's.
// At very least, `lower` must be specified.  If `upper` length is zero, no `upper`
// mounts will be used.  `workdir` will be assigned automatically.
//
// Overlay mounts are identified by their `lower` ID.
//
//
// swagger:model mount_overlay
type MountOverlay struct {

	// lower
	// Required: true
	Lower *int64 `json:"lower"`

	// mountpoint
	// Read Only: true
	Mountpoint string `json:"mountpoint,omitempty"`

	// ref
	// Read Only: true
	Ref int64 `json:"ref,omitempty"`

	// This array of RBD ID's is interpreted in order, and will be layered in the order provided.
	//
	Uppers []int64 `json:"uppers"`

	// workdir
	// Read Only: true
	Workdir string `json:"workdir,omitempty"`
}

// Validate validates this mount overlay
func (m *MountOverlay) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLower(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MountOverlay) validateLower(formats strfmt.Registry) error {

	if err := validate.Required("lower", "body", m.Lower); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MountOverlay) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MountOverlay) UnmarshalBinary(b []byte) error {
	var res MountOverlay
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
